// Code generated by bindata. DO NOT EDIT.
// sources:
// templates/project/.env.dev
// templates/project/.env.prod
// templates/project/.env.qa
// templates/project/Makefile
// templates/project/components/dropdown/blocks.html
// templates/project/components/dropdown/index.go
// templates/project/doc.go
// templates/project/docker-compose.yml
// templates/project/go.mod.template
// templates/project/main.go
// templates/project/pages/hello/index.go
// templates/project/pages/index.go
// templates/project/pages/not_found/index.go
// templates/project/pages/theme.go
// templates/project/service/hello.go
// templates/project/service/index.go

package templates

import (
	"fmt"
	"os"
	"strings"
	"time"
)

type gzipAsset struct {
	bytes []byte
	info  gzipFileInfoEx
}

type gzipFileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type gzipBindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi gzipBindataFileInfo) Name() string {
	return fi.name
}
func (fi gzipBindataFileInfo) Size() int64 {
	return fi.size
}
func (fi gzipBindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi gzipBindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi gzipBindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi gzipBindataFileInfo) IsDir() bool {
	return false
}
func (fi gzipBindataFileInfo) Sys() interface{} {
	return nil
}

var _gzipBindataTemplatesProjectEnvdev = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\x08\xf2\xf7\x72\x75\x0e\x89\x0f\x72\x75\xf1\x0c\x8e\x77\x74\x71\x09" +
		"\xb2\x55\xb2\x32\x33\x36\xb7\x54\xe2\x82\x49\x05\xbb\x06\x85\x79\x3a\xbb\xc6\x7b\xba\xd8\x16\x14\xe5\x67\xa5\x26" +
		"\x97\xe8\x1a\x72\xc1\x65\xa1\x5a\xcc\x0d\x2c\x0d\x94\xb8\x00\x01\x00\x00\xff\xff\xec\xd2\x4e\xea\x4e\x00\x00\x00" +
		"")

func gzipBindataTemplatesProjectEnvdev() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectEnvdev
	info := gzipBindataFileInfo{
		name:        "templates/project/.env.dev",
		size:        78,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1608994304, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectEnvprod = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\x08\xf2\xf7\x72\x75\x0e\x89\x0f\x72\x75\xf1\x0c\x8e\x77\x74\x71\x09" +
		"\xb2\x55\xb2\x32\x33\x36\xb7\x54\xe2\x82\x49\x05\xbb\x06\x85\x79\x3a\xbb\xc6\x7b\xba\xd8\x16\x14\xe5\x67\xa5\x26" +
		"\x97\xe8\x1a\x72\xc1\x65\xa1\x5a\xcc\x0d\x2c\x0d\x94\xb8\x00\x01\x00\x00\xff\xff\xec\xd2\x4e\xea\x4e\x00\x00\x00" +
		"")

func gzipBindataTemplatesProjectEnvprod() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectEnvprod
	info := gzipBindataFileInfo{
		name:        "templates/project/.env.prod",
		size:        78,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1608994310, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectEnvqa = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\x08\xf2\xf7\x72\x75\x0e\x89\x0f\x72\x75\xf1\x0c\x8e\x77\x74\x71\x09" +
		"\xb2\x55\xb2\x32\x33\x36\xb7\x54\xe2\x82\x49\x05\xbb\x06\x85\x79\x3a\xbb\xc6\x7b\xba\xd8\x16\x14\xe5\x67\xa5\x26" +
		"\x97\xe8\x1a\x72\xc1\x65\xa1\x5a\xcc\x0d\x2c\x0d\x94\xb8\x00\x01\x00\x00\xff\xff\xec\xd2\x4e\xea\x4e\x00\x00\x00" +
		"")

func gzipBindataTemplatesProjectEnvqa() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectEnvqa
	info := gzipBindataFileInfo{
		name:        "templates/project/.env.qa",
		size:        78,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1608994313, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectMakefile = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x4d\xaa\xc3\x30\x0c\x84\xd7\x99\x53\xe8\x02\xd2\xdb\x07\xde\x59" +
		"\x82\xb1\x95\x34\x34\xb1\x8c\xff\x72\xfd\x62\x02\xdd\x84\xee\x86\xf9\xa4\x8f\x69\x69\x09\xe6\xdf\x9a\x67\x4c\x77" +
		"\x60\x6f\x67\xb2\xa2\xd4\x12\x71\x00\x82\x5d\xf1\x09\x47\x0b\x1c\xb6\x95\x27\x1b\x2d\x70\xb9\xea\x5f\xfc\xfb\x82" +
		"\x78\x05\x5a\x5a\x5c\x4a\x33\xa6\xcd\x28\xb7\x48\xa7\xdb\xa3\x6c\x46\xa5\xba\x5c\x89\x59\x63\xe7\x75\x3f\xf4\x5f" +
		"\x34\x76\x09\xda\xc7\xcb\x4c\xdf\xd5\x74\x0b\x80\xaa\xa5\xde\x9a\x91\x88\xb3\xf3\x4a\xdc\x49\xfe\x44\x04\x9f\x00" +
		"\x00\x00\xff\xff\xef\x66\xb7\xef\xe6\x00\x00\x00")

func gzipBindataTemplatesProjectMakefile() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectMakefile
	info := gzipBindataFileInfo{
		name:        "templates/project/Makefile",
		size:        230,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1609083233, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectComponentsDropdownBlockshtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xc9\x51\x0a\x85\x20\x10\x05\xd0\xad\xdc\x6f\x79\xe0\x96\xf4\xd9\x98" +
		"\x43\xc3\x35\xd0\x10\x11\xf7\x1e\x7d\x9f\xb5\xbc\x43\x2f\xda\x90\xd5\x04\x29\x12\x95\x36\x91\x2a\x7b\x54\x22\x1c" +
		"\x92\x95\x12\xf0\xb7\x9a\xae\xf6\x43\xe4\xec\x45\x79\x42\xac\x09\x86\x9a\x7d\x34\xf0\xdc\x70\x7e\xef\x37\x00\x00" +
		"\xff\xff\x45\xca\x5d\xd0\x50\x00\x00\x00")

func gzipBindataTemplatesProjectComponentsDropdownBlockshtml() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectComponentsDropdownBlockshtml
	info := gzipBindataFileInfo{
		name:        "templates/project/components/dropdown/blocks.html",
		size:        80,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1609587368, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectComponentsDropdownIndexgo = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\x48\x29\xca\x2f\x48\xc9\x2f\xcf\xe3\x02" +
		"\x04\x00\x00\xff\xff\xc2\x97\x61\x97\x11\x00\x00\x00")

func gzipBindataTemplatesProjectComponentsDropdownIndexgo() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectComponentsDropdownIndexgo
	info := gzipBindataFileInfo{
		name:        "templates/project/components/dropdown/index.go",
		size:        17,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1608986084, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectDocgo = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xc8\x4d\xcc\xcc\xe3\x02\x04\x00\x00\xff" +
		"\xff\xec\x33\xc7\x17\x0d\x00\x00\x00")

func gzipBindataTemplatesProjectDocgo() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectDocgo
	info := gzipBindataFileInfo{
		name:        "templates/project/doc.go",
		size:        13,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1608900301, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectDockercomposeyml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x50\x32\xd6\xb3\x50\xe2\xe2\x2a\x4e" +
		"\x2d\x2a\xcb\x4c\x4e\x2d\xb6\xe2\x52\x50\x28\x4a\x4d\xc9\x04\x33\x14\x14\x32\x73\x13\xd3\x53\xad\xa0\x22\x39\x89" +
		"\x25\xa9\xc5\x25\x60\xf1\x82\xfc\xa2\x12\xa8\x12\x5d\x05\x33\x63\x73\x4b\x2b\x10\x01\x08\x00\x00\xff\xff\x65\xcf" +
		"\x35\x53\x55\x00\x00\x00")

func gzipBindataTemplatesProjectDockercomposeyml() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectDockercomposeyml
	info := gzipBindataFileInfo{
		name:        "templates/project/docker-compose.yml",
		size:        85,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1608994571, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectGomodtemplate = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x51\x0e\x80\x20\x08\x00\xd0\x7f\x4f\xe1\x09\x64\x7e\xd4\x7d\x4c" +
		"\xc9\x6c\x20\x8e\x60\xab\xdb\xf7\x58\x9a\x13\xc6\x3e\xec\xf2\x23\x55\x61\x18\xf3\x24\x7f\x77\xe8\x2a\x3e\x1b\x95" +
		"\x0f\x15\x0c\x79\x51\x31\x7c\x60\xa9\xdc\x58\x2d\x84\x2e\x31\xa7\xbc\x85\x3f\x00\x00\xff\xff\x2e\xe8\x97\xce\x41" +
		"\x00\x00\x00")

func gzipBindataTemplatesProjectGomodtemplate() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectGomodtemplate
	info := gzipBindataFileInfo{
		name:        "templates/project/go.mod.template",
		size:        65,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1609057382, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectMaingo = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x4d\x8f\xdb\x36\x13\x3e\x4b\xbf\x82\x11\x90\x40\xca\xeb\x57\x2a" +
		"\x7a\xe8\xc1\x81\x0f\x8e\xed\x4d\x8c\x6c\xd2\x60\x9d\x66\x0b\xb4\xc5\x82\x2b\x8d\x64\x66\x69\x52\x21\x29\x67\xb7" +
		"\x81\xff\x7b\x31\x24\x25\x4b\xfe\xd8\x45\x0a\xd4\x07\x4b\x1a\xce\xc7\x33\xc3\xe1\xcc\xb0\xa6\xf9\x1d\xad\x80\x6c" +
		"\x28\x13\x61\x98\x65\x95\x1c\x57\x20\x40\x51\x03\xa4\x92\xa4\x7b\x4f\xb3\x5c\x6e\x6a\x29\x40\x18\x9d\xa5\x69\xfa" +
		"\x28\x6b\x4d\x2b\x78\x9a\x4b\x83\xda\xb2\x1c\x2c\x5f\xc8\x36\xb5\x54\x86\xc4\x61\x10\xdd\x3e\x18\xd0\x51\x18\x44" +
		"\xb9\x14\x06\xee\x0d\xbe\x32\xe9\xfe\x33\x26\x1b\xc3\x38\x7e\x70\x59\xe1\x43\x5a\x56\x6d\x14\x13\x95\x8e\xc2\x30" +
		"\x88\x2a\x66\xd6\xcd\x6d\x9a\xcb\x4d\xd6\xa8\x92\x6e\x21\xcb\x39\xcb\xb6\x3f\x1f\x2e\x32\x51\xf2\xe6\xfe\x97\x4c" +
		"\xd4\x77\x55\x26\x0a\x0a\x1b\x29\xa2\xc7\x58\x40\x6c\x1f\x5f\x57\x4a\xaa\x33\x1c\x9a\xde\x36\xeb\xfa\xd1\xc5\x8c" +
		"\xe6\x86\x49\xa1\x1f\x67\x92\xf9\x1a\xb4\x51\xd4\xa0\xa9\xd3\x9c\x95\x92\x8d\x28\x38\x7d\x00\x95\x21\xb0\x1a\xbe" +
		"\xb0\x33\x4a\xfb\xac\x06\x36\x35\xa7\x06\x74\x56\x2b\xf9\x05\x72\xe3\xf6\xf1\x5f\x49\xfa\xbd\x8d\xc2\x24\x0c\xcb" +
		"\x46\xe4\x44\x35\x62\x5a\xd7\x31\x88\xed\x05\xe3\x70\x05\xb4\x00\x45\x98\x4c\xdd\x5b\x42\x6c\xec\xc8\xf7\x30\xd8" +
		"\x52\x45\x40\x6c\x67\x52\x94\xac\x22\x13\x82\x51\x4f\x3f\xc0\xb7\xd8\xab\x4c\x3f\x3a\x13\x1f\xe8\x06\x74\x4d\x73" +
		"\x48\xc2\x4e\x88\x29\x29\x36\x20\xcc\xa5\xb4\xea\xad\xe8\xe2\x90\xec\xb8\xb9\xa4\xc5\x42\x29\x32\x39\x96\x4b\xaf" +
		"\xa0\x62\xda\x80\x8a\x3b\x1c\x49\x18\xb0\xb2\x93\x79\x36\x21\x82\x71\x04\x1b\x28\x30\x8d\x12\xc4\x6d\x7d\x7a\xad" +
		"\x68\xfd\xab\xe0\x0f\xb1\xe7\x4c\xc2\x60\x17\x5a\xd1\xa1\xdf\x3d\x05\x1e\xb9\x5b\xf0\xb8\x27\xe4\x45\x0b\xbd\x4f" +
		"\xff\x8e\x1a\xc6\x43\x55\x3b\xaf\x42\x01\x2d\x16\x6e\xa1\xf3\xaa\x2f\x7b\xda\x27\x44\x76\x20\xd9\x83\x76\xce\xb9" +
		"\xa1\x04\xaa\xd9\x39\x3f\x11\x88\xdf\xa5\x65\x31\x22\x6b\xaa\x57\xed\x97\x43\xe4\x0c\xa7\x6f\xc0\xac\xec\x79\x8d" +
		"\xa3\xd5\xe2\xea\xf3\x72\xb6\xb8\x59\xce\x23\x17\xe3\x67\x03\xa9\xe3\x10\x63\x26\x44\x9d\x11\x52\x4a\x45\x68\x5d" +
		"\x13\xa6\x89\x82\xaf\x0d\x53\x50\x8c\x48\xcd\x81\x6a\x20\x8d\x06\xf2\xfc\x6b\x34\xea\x59\x7e\x07\x0f\x17\x52\xc5" +
		"\xd1\xd5\x62\xbe\x5c\xdd\x4c\xe7\xf3\xab\x28\x49\x8e\xc0\x4f\x8b\x42\xf5\xe1\xe3\xf7\x39\x07\x9c\x8e\x43\xe8\x56" +
		"\xe2\xbf\x02\x7f\x04\x1b\x8f\xe9\x7b\x7a\xbf\x2c\x38\x08\xd0\x7a\xde\x28\x8a\x85\xc4\xba\xf0\xf1\xf4\xda\xa1\x3b" +
		"\x2d\x3d\x8e\x3e\x4e\xdf\x2c\x6e\xde\x4f\x7f\xbf\x59\xce\x2f\x17\x1f\x16\xab\x55\xcf\xbb\x73\xca\xd0\xd3\x33\x20" +
		"\xc8\x84\x60\xf9\x49\xe7\x50\xd2\x86\x9b\xf7\xf4\x1e\x95\xb4\x5c\x43\x1f\x90\x3a\x5b\x43\x7e\x77\xe4\xc1\xd1\xca" +
		"\x13\xf8\x67\x6f\x17\xb3\x77\xe7\x3c\x38\x56\xd6\xe2\x3f\x65\xa6\x8f\xbe\x0f\xdd\xf2\xe9\xa5\x30\xa0\xb6\x94\xef" +
		"\x1d\x71\x45\xdc\x1d\x37\xf5\x40\x26\x9e\xa0\x71\xf3\xaf\xa5\xba\x03\xf5\xc9\x57\xcb\x96\x27\x4e\xc2\xa0\x2d\x6e" +
		"\xd3\xa2\x98\x3a\xfe\x78\xa8\xa8\xad\x72\x39\x67\x33\x73\x3f\xf2\xcf\x19\x15\x39\x70\x5b\x32\x7c\xb3\x4c\xaf\x99" +
		"\x59\x3b\x72\xdc\x92\x5e\xd3\xfc\xce\x95\xeb\x18\xd3\xc6\xb7\xba\xf4\x9a\x32\x03\xea\x42\xaa\x77\x8c\x73\x14\x5b" +
		"\xb1\x4a\x50\x1e\xf7\xd7\xfd\xea\x6c\x4d\x45\x9c\x1c\x5a\x6d\x31\x69\xd3\x06\xab\xd7\x9c\xda\x98\xad\xdc\x62\x1c" +
		"\x06\x81\xc7\x1e\x06\xc1\xbe\x4a\xec\x3f\xec\xa9\xdb\x7f\xa6\x97\xb2\xaa\xc0\x52\x86\x91\x18\x85\x01\x1a\xf6\x46" +
		"\xd3\x99\x02\x6a\x60\xd1\xeb\x18\xd8\x6f\xe2\x9b\x2e\x20\x33\xf7\x1c\x91\x1b\xe2\x5a\xa8\xd7\x9c\x90\xf8\x65\x5b" +
		"\x66\x57\x46\x2a\x18\xb9\x26\x94\xf4\x0f\x6e\x97\x64\x23\x2c\x8b\x5d\x39\xbf\x85\x52\x2a\x58\x0a\x66\xb0\x66\x8e" +
		"\x27\x6d\xe5\x48\x5f\x77\x0b\xb1\x07\xd8\x3b\xc1\xc9\xab\x03\xc1\xa7\x1b\xc9\x80\x7f\xdf\x4e\xbc\xee\x3e\x00\x1f" +
		"\x0e\x6b\x3a\x79\x75\xc8\x71\xd0\x71\xbe\x29\x5a\xbb\x3e\x71\x68\x70\x28\x97\x9c\x2e\x61\x33\x2e\x35\x13\x15\x16" +
		"\x2f\xce\x72\xb7\xf9\x45\x03\xc4\xc8\x2e\x17\x98\x60\x86\x51\xce\xfe\xb6\x9f\xe3\x3f\x05\x79\xfe\x3f\x1d\x8d\x5a" +
		"\xcb\x7b\x57\x68\x69\x40\x9d\x88\xe4\xb4\xa5\x9f\x0e\xe4\x40\xec\xe9\x38\xf6\xd9\x7b\x95\x93\xd6\x35\x9e\x69\x3d" +
		"\x22\xb4\x28\xec\x9b\x8b\x8a\x1d\x7c\x7c\x6a\x59\xf2\xc9\xf4\xed\xa5\x68\x8b\x31\x0c\x82\x7d\xca\x9c\xaf\x8a\xa3" +
		"\x73\x05\xc7\x27\x37\xc6\xa5\x07\xa8\xe7\xdf\xf0\x04\xc6\xc7\x1b\xb4\x77\x79\xaf\xa0\x37\x87\x0c\xb3\x05\x8f\x38" +
		"\x66\x0b\xfc\x48\x8a\xc0\x8f\xe4\xc5\x98\x3c\x3f\xde\xf6\x2c\x23\x20\x74\xa3\x80\x50\xce\x6d\xb0\xc9\x86\x0a\x5a" +
		"\x81\xd2\x64\x4d\xb7\x40\x72\x2e\x35\x14\x61\xd0\xee\x8f\x07\x1a\x76\x46\x19\x0f\x77\x7e\xb2\xc4\x9b\x4b\x9c\xb4" +
		"\xa3\x23\xf6\xd3\x09\xd6\xa9\x74\x5a\xd7\xe8\x0b\xce\x89\x63\x82\xbf\x68\x2b\x59\x11\x61\xe8\xdf\x02\xaf\x1d\x3d" +
		"\xfa\x2c\x59\x41\x66\x97\x4b\x4b\xff\x4d\xd3\xca\x31\x5b\x5e\x52\x2b\xb9\x65\x05\x68\x62\xd6\x80\x4c\xc4\x48\xc9" +
		"\x6d\xdb\x46\x82\x65\xe1\xec\x56\x51\xf5\x60\xc5\x67\x72\xb3\xa1\xa2\xd0\x63\xf2\xc7\x5f\x2f\x11\x82\x27\xd8\x61" +
		"\xca\xfe\xf5\xd0\xa0\x11\x6d\xa8\x32\x56\x34\x08\xe6\xa0\x73\xc5\x6a\x17\x33\xb7\xd2\x9e\x05\xfb\x04\xe5\x19\x2f" +
		"\x38\xad\xac\x09\xb4\x80\x1f\x4e\x73\xf0\x02\xbf\xdd\x58\xd2\xa3\xb6\x16\x23\x10\xdb\xff\x97\x8c\x83\xd7\xd2\x39" +
		"\x1b\xad\xc0\x68\x52\x53\xb3\xc6\xe3\x4b\x05\x91\x16\x03\xe5\xa4\x90\x06\xc4\x96\xa0\x10\x2e\xe1\x4c\xdb\x1f\x96" +
		"\xc9\x96\xf2\x06\x34\x29\x95\xdc\xb4\x4a\x77\xee\xe9\x1f\xae\x93\x8d\x5d\x41\xce\xcd\x3d\xf1\x41\xb1\xf5\xb8\x37" +
		"\xf2\xe3\xcf\xcf\xc1\xa7\x2e\x07\x47\x0c\x04\x13\xd8\xde\xf7\xd2\x4f\x8a\x6d\x56\x78\x0b\x40\xfd\x69\x3b\x94\x75" +
		"\xbe\x62\xbb\xc3\x1f\x0e\xef\x20\xda\xdb\x47\x82\xb9\xfe\x53\x6b\xd9\xb5\x55\x04\x25\xcc\xc8\x7a\xeb\xd2\xde\xdd" +
		"\x34\x2d\x06\x14\xea\x84\xbd\x14\x2b\x3b\xde\xfe\xcc\x1c\x9c\x9f\x9b\xcb\xfd\xc0\x6c\x83\x14\xfa\x97\xa1\xdb\x13" +
		"\x62\xef\xbf\x78\xa0\x5e\x37\x65\x09\x2a\xf6\xd8\xbc\x5c\x2b\xe6\x8d\x9c\xba\x57\x25\xbd\x4d\xb0\xff\xf8\x37\x2c" +
		"\x00\xb4\xae\xd3\xab\x46\xc4\x52\xa7\x53\x55\xe9\xe3\x12\xc0\x65\x95\x5e\x50\x43\xb9\x3f\xee\xbb\x70\x17\xfe\x13" +
		"\x00\x00\xff\xff\xc0\x4e\xbb\x9a\x2c\x10\x00\x00")

func gzipBindataTemplatesProjectMaingo() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectMaingo
	info := gzipBindataFileInfo{
		name:        "templates/project/main.go",
		size:        4140,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1609090577, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectPagesHelloIndexgo = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x41\x6b\xdc\x30\x10\x85\xcf\x3b\xbf\x62\x6a\x68\xb1\x16\xe3\xbd" +
		"\xf5\xd6\x43\x49\x09\x39\x94\x10\xd2\x85\x9c\x27\xab\xb1\xa5\x46\x96\x54\x79\x94\x66\x59\xfc\xdf\x8b\xec\x6d\xb3" +
		"\xed\x36\xb0\x17\x83\xa4\xe1\xbd\xef\xf9\x4d\xa4\xdd\x13\xf5\x8c\x86\x9d\x0b\x00\x76\x88\x21\x09\xd6\xb0\xaa\xba" +
		"\x41\x2a\x80\x55\xd5\x5b\x31\xf9\xb1\xdd\x85\x61\x63\x7d\xe7\xf2\xcb\xc7\xcd\x48\x8f\xd9\xc4\xb7\x5e\xfb\x14\xb2" +
		"\xd7\x8e\xf6\x9c\x36\xf1\xa9\xdf\xe8\x30\xe4\xea\xb2\xd1\xc8\xdf\xed\x85\xa3\xa3\xec\x1d\xeb\x0a\x14\xc0\x33\x25" +
		"\xbc\x29\xfc\x0f\x21\x39\x7d\x1b\xe4\xba\x8c\xe2\x27\x2c\x72\xed\x0d\x79\xed\x38\x5d\x67\xbf\xab\xbb\xf2\xd1\x24" +
		"\xb4\x3c\x7d\x21\x21\x85\xeb\x02\xd8\xde\x06\xcd\x78\x80\x55\x62\xc9\xc9\xe3\x7c\xb7\xe5\x17\xa9\xbb\x41\xda\x6f" +
		"\x31\x59\x2f\x5d\x5d\xcd\x36\x38\xfb\xa0\x0e\x3c\xa2\x0f\x82\x86\x9e\x19\xc5\xd8\x11\xdf\xff\x78\x57\x35\x58\x0c" +
		"\xda\x3b\x12\xa3\x14\x4c\x0a\x40\xf6\x91\x4f\x00\xbf\xd2\x3e\x64\xc1\x51\x52\xde\xc9\x61\x02\x28\x54\x58\x9b\xb3" +
		"\x11\x85\xf7\xec\x35\xa7\x3a\xe2\x7a\xe6\xbd\xa3\x9e\x17\xf9\x57\xfe\x06\x23\x25\xf6\x72\x12\x43\x95\x1c\xcb\x6d" +
		"\xfb\x39\x46\xf6\xfa\xca\x58\xa7\xeb\x0b\x32\x9d\x05\x50\xf0\x1b\xf0\x2a\x31\x09\xbf\x32\x16\x98\x3a\x52\xcf\xf7" +
		"\x21\x0b\x97\x38\xd6\xf7\x0d\x8a\xe1\x81\x71\xbd\xd4\xd3\x6e\xcb\xa9\x41\x49\xb8\xec\x4c\xbb\x4d\xe4\xc7\xb2\x63" +
		"\xea\x24\x53\xe1\x2d\x25\x7a\xfe\x39\x1f\x8f\xcd\x3d\x58\x31\x7f\xbb\x1c\xe5\x1b\xfc\xf0\xef\xbf\x3a\x4c\xcd\x7f" +
		"\x76\x40\xfd\xe9\xf3\x28\x0d\x13\xfc\x0a\x00\x00\xff\xff\x42\xe1\xd3\x57\xf2\x02\x00\x00")

func gzipBindataTemplatesProjectPagesHelloIndexgo() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectPagesHelloIndexgo
	info := gzipBindataFileInfo{
		name:        "templates/project/pages/hello/index.go",
		size:        754,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1609607488, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectPagesIndexgo = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xc1\x6e\xdb\x30\x0c\x3d\x4b\x5f\xc1\xe9\x64\x07\x86\x7c\xdb\x61" +
		"\x43\x0e\x45\x9a\xad\x03\x86\xb6\x68\x03\xf4\x38\xa8\x36\x6d\xab\x95\x25\x83\xa6\xb3\x14\x43\xff\x7d\x90\x15\xa7" +
		"\xc5\xb6\x0e\x3d\x99\xa2\x1e\xa9\xf7\xf8\xe8\xc1\x54\x8f\xa6\x45\x18\x4c\x8b\xa3\x94\xb6\x1f\x02\x31\x64\x52\xa8" +
		"\x2a\x78\xc6\x03\x2b\x29\x14\xdb\x1e\x95\x94\x42\xb5\x96\xbb\xe9\x5e\x57\xa1\x2f\xad\x6f\xdc\x74\xf8\x58\xfa\xe1" +
		"\xb1\x2d\x3d\xfa\xbd\xfa\xef\x3d\x51\xa0\x37\x10\xa3\xb9\x9f\xba\xa1\x0c\x55\x87\x23\x93\xe1\x08\xfc\x37\xb2\xa5" +
		"\x30\xf9\xda\x99\x27\xa4\x32\xb6\x1d\xf0\xc1\xbe\x07\xcb\xd8\x0f\xce\x30\x8e\xe5\x40\xe1\x01\x2b\x2e\x67\xb9\x65" +
		"\x87\xce\x85\x37\x58\xbd\xa7\xde\x07\xfe\xd1\x44\x98\x92\xb9\x94\x55\xf0\xe3\x3c\xba\x6b\xd3\xe2\x35\x61\x63\x0f" +
		"\xb0\x06\x95\xb0\x2a\xa5\x6f\xc2\xc4\x08\x2f\xe9\x72\x35\x18\xee\x14\x94\x25\xcc\x11\x30\x3a\x37\x02\x77\x08\x14" +
		"\xa1\x04\x1c\xa0\x37\x5c\x75\x60\xfc\x13\x77\xd6\xb7\x60\x9a\x39\xdf\x21\xa4\x1e\xf1\xed\x66\xf2\x15\x6c\x08\x0d" +
		"\x63\x7c\x66\xcc\xa4\xa8\xf8\x00\x47\x0f\xf5\x26\x7d\x0b\x29\x5c\x68\x5b\x24\x88\x93\xd3\xdf\xe7\xb8\x90\x62\x64" +
		"\xc3\x36\x78\x58\xbd\xf2\x40\xdf\xa6\x64\x21\x05\xfa\xfd\x26\xf8\xc6\xb6\xb0\x8a\x46\xeb\xad\xdf\xdf\x72\x20\x2c" +
		"\xa4\xe8\xcd\xe1\x5b\xed\xd0\xe3\x38\x42\xdc\x12\x7d\x3e\xd1\x52\x66\x6b\x87\x9b\x0e\xab\xc7\x25\xf7\x27\x22\x87" +
		"\x6c\x35\x13\x99\x29\x17\x30\x2f\x49\x0e\xbf\xa4\xd8\x1b\x4a\x1b\x09\xeb\x44\xf5\x12\x7f\x2e\xba\xa2\xb0\x42\x8a" +
		"\xa3\x92\x18\xbd\xcc\x3b\x9e\x5e\x51\x8a\xc7\xbf\x58\xc4\xe4\xae\xc3\x3e\xd2\x5f\x94\xeb\x1d\x19\x3f\xc6\xd5\xcf" +
		"\xf2\x98\x3e\x19\xab\x2f\x03\x7f\x89\x41\x21\x45\x2e\x13\xb1\xa3\x31\x6b\x58\x8a\x67\x53\x29\xcb\xa5\x98\x39\xeb" +
		"\xb3\xba\xbe\xf2\x27\xb7\xb3\x93\xc4\x5d\xb8\x31\xb5\xa1\xed\x1e\x3d\x67\xa9\x4b\x91\x64\xe6\xb1\xb7\x6d\xc0\xd4" +
		"\xf5\x96\x08\x3e\xad\xe1\xd4\x29\x53\x69\x4b\x0b\x98\xbf\x3a\x99\x7c\x11\xe3\xbb\x40\xae\x8e\x8d\xf3\xcf\x4b\xe5" +
		"\x87\x35\x78\xeb\xe2\x08\x05\x21\x4f\xe4\xe3\xb1\x80\xf4\xff\xe9\x3b\x32\xc3\x95\x77\x4f\x59\x42\xe7\x52\x3c\x4b" +
		"\x29\x12\x13\x7d\xc1\x3c\xdc\x22\xed\x6d\x85\xd9\x89\xfc\x91\x5f\x01\xea\x62\x7b\x76\xae\x0a\x50\x5f\xb7\x3b\x95" +
		"\xcb\xa5\xfb\xf1\xd6\x5b\x27\x9f\xe5\xef\x00\x00\x00\xff\xff\xdf\x05\x1f\x7e\x4c\x04\x00\x00")

func gzipBindataTemplatesProjectPagesIndexgo() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectPagesIndexgo
	info := gzipBindataFileInfo{
		name:        "templates/project/pages/index.go",
		size:        1100,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1609671343, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectPagesNotfoundIndexgo = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xbd\x4a\x44\x31\x10\x85\xeb\x3b\x4f\x31\x06\x84\x44\x24\xe9\xec" +
		"\xec\x64\xb1\x5a\x04\xed\x65\xbc\xf9\xd9\xb8\x37\x3f\x8c\x13\x59\x11\xdf\x5d\x72\x7d\x01\x9b\x29\xce\xf9\x98\xc3" +
		"\xd7\x69\x3d\x53\x0a\x58\x9b\xbc\xc6\x36\xaa\x07\xc8\xa5\x37\x16\xd4\xb0\xa8\x58\x44\x01\x2c\x2a\x65\x39\x8d\x37" +
		"\xbb\xb6\xe2\x72\x8d\xdb\xb8\xdc\xb9\xc4\x93\xde\xe8\x2b\xb0\xeb\xe7\xe4\x7c\x2b\x43\xfd\x0f\xed\xe1\x3d\x2b\x30" +
		"\x00\x9f\xc4\x78\x6c\x72\x98\x35\xde\xe3\xcc\xed\x23\x55\xbf\x05\x3e\x8c\xba\xea\x38\x8f\x27\xa1\xbf\xea\x81\x84" +
		"\x0c\xde\xcc\x25\x7b\x6c\x3e\xe0\x37\x2c\x1c\x64\x70\xc5\x3d\x7b\x09\x17\xd1\xb1\x88\x7d\xee\x9c\xab\x44\xad\xae" +
		"\x3f\xa6\x18\xee\x62\x57\xea\x16\xe7\x2f\xfb\x44\x72\x32\x06\x7e\x0c\xfc\x06\x00\x00\xff\xff\x0d\xdb\x4b\xfb\xfd" +
		"\x00\x00\x00")

func gzipBindataTemplatesProjectPagesNotfoundIndexgo() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectPagesNotfoundIndexgo
	info := gzipBindataFileInfo{
		name:        "templates/project/pages/not_found/index.go",
		size:        253,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1609057382, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectPagesThemego = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xb1\x0a\xc2\x30\x10\x00\xd0\xb9\xf7\x15\x47\x07\x51\x90\x66\x73" +
		"\x10\x9c\xfc\x03\xf5\x07\x62\x7b\xa6\xa1\xd7\x5c\xb8\x24\xc5\x22\xfe\xbb\x18\x1d\xdf\x8b\xb6\x9f\xac\x23\x8c\xd6" +
		"\x51\x02\xf0\x73\x14\xcd\xb8\x85\xa6\x75\x3e\x8f\xe5\xde\xf5\x32\x1b\x1f\x1e\x5c\x9e\x07\xe3\x54\x4a\x18\xd8\xae" +
		"\xa4\x26\x4e\xce\xa4\xbc\x32\x0d\x2d\xec\x00\x16\xab\x78\x1b\x69\x26\x3c\xe1\xe6\xf7\x5d\xf5\x0b\x9a\x6b\xaf\x44" +
		"\x21\x1d\x11\x31\x78\xde\x43\x73\x16\x16\xad\xfe\xc7\x85\x92\xf0\x42\xdf\xab\xf1\x86\x4f\x00\x00\x00\xff\xff\x28" +
		"\x41\x73\x08\x98\x00\x00\x00")

func gzipBindataTemplatesProjectPagesThemego() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectPagesThemego
	info := gzipBindataFileInfo{
		name:        "templates/project/pages/theme.go",
		size:        152,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1609607468, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectServiceHellogo = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x4f\x8b\xdb\x30\x10\xc5\xcf\x9a\x4f\x31\xe8\x64\x15\xaf\x42\x2f" +
		"\x3d\x04\xf6\x10\x02\xdb\x52\xd8\x50\xba\x81\x3d\x94\x52\x64\x65\xe2\xb8\x6b\x6b\x5c\xfd\x59\xa7\x2c\xf9\xee\x45" +
		"\x96\x9b\xb6\x7b\xe8\x49\xf0\x9e\xe6\xcd\x6f\xde\x68\xec\x93\x69\x09\x03\xf9\xe7\xce\x12\x40\x37\x8c\xec\x23\x56" +
		"\x20\xa4\x65\x17\xe9\x1c\x25\x80\x90\x6d\x17\x4f\xa9\xd1\x96\x87\x55\xe7\x8e\x7d\x3a\xbf\x5b\x05\xd3\xa4\xd3\x28" +
		"\xff\x67\xae\x8c\x8d\x1d\xbb\x20\x41\x01\x1c\x93\xb3\x78\xa2\xbe\xe7\x47\xf6\xfd\x61\x33\x5b\x95\x8d\x67\x5c\x16" +
		"\xe9\x6d\x79\x6b\xfc\xce\x0d\x2e\xa3\xfa\x23\x37\x0a\x5f\x40\x7c\xc3\xdb\xac\xeb\xbd\x37\x2e\x64\x46\xfd\x40\xee" +
		"\xb0\xe7\x4d\xdf\x57\x65\x9b\xde\xd1\x74\x4f\x21\x98\x96\xaa\xfc\xf3\x3e\xb4\xfa\xce\xf3\xb0\x39\x1c\x7c\x5d\x66" +
		"\xb9\xc6\x2f\x5f\x9b\x9f\x91\x2a\x39\x93\xe0\x94\x51\xa4\x52\x35\xde\xbc\x55\x70\x01\x78\x36\x1e\x3f\x5c\x21\x3f" +
		"\xd3\x8f\x44\x21\xe2\xed\x15\xe7\x91\xfd\x13\xf9\x45\x7f\x01\x51\xce\xd8\x99\x81\xd6\x88\xf2\xcf\x79\xb2\x06\xf1" +
		"\x29\x35\x0f\xa9\xd9\xf3\xd8\xd9\xf5\xe2\xdd\x4c\xbf\xcd\x12\xb4\xf5\x64\x22\xfb\x35\xe6\x76\x2a\xcb\xee\xd8\xb5" +
		"\xaf\x76\x6d\x67\x51\xe1\x9b\x7f\xe5\xf7\x9e\xd3\x98\x8b\x11\x65\x4a\x17\x92\xbf\x50\x8b\x70\x97\x83\x5f\xd7\xae" +
		"\x40\x08\x4f\x31\x79\x77\xfd\xbd\xa3\x29\x07\xcf\xb1\x0b\x88\x02\x71\xa9\xe1\x02\xbf\x02\x00\x00\xff\xff\xce\xae" +
		"\xec\x71\x25\x02\x00\x00")

func gzipBindataTemplatesProjectServiceHellogo() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectServiceHellogo
	info := gzipBindataFileInfo{
		name:        "templates/project/service/hello.go",
		size:        549,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1608986761, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

var _gzipBindataTemplatesProjectServiceIndexgo = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\xcd\x6e\xe3\x36\x10\xc7\xcf\xe2\x53\xcc\x0a\xd8\x85\x64\xa8\xd4" +
		"\xad\x28\x52\xf8\xe0\xda\x6e\xeb\xb4\x75\x02\x3b\x6d\x0e\x6d\x51\x30\xd4\x58\xe6\x46\x26\x95\x21\xe5\xc4\x08\xf2" +
		"\xee\x05\xa9\x0f\xdb\x41\xeb\xed\xa1\x39\xc4\x22\x67\x38\x5f\xff\x1f\x59\x0b\xf9\x28\x4a\x04\x8b\xb4\x57\x12\x19" +
		"\x53\xbb\xda\x90\x83\x84\x45\xb1\x34\xda\xe1\x8b\x8b\x59\x14\x57\xa6\x8c\x19\x8b\xe2\x52\xb9\x6d\xf3\xc0\xa5\xd9" +
		"\xe5\xa5\xf9\x8a\xb0\x50\x36\x6f\xff\xef\xbf\x79\xef\xa0\xf4\xa6\x6a\x5e\xbe\xce\x75\xfd\x58\xe6\x1a\xf5\x3e\xbe" +
		"\x68\x27\x32\x74\xd1\xe3\xb3\x35\xfa\x5f\x1c\xac\x78\x68\xb6\xf5\x45\x63\x2e\xa4\x53\x46\xdb\xcb\x4e\xd2\x14\x28" +
		"\xbf\xe0\xa3\xf4\x67\x94\xce\xd0\x17\xdc\x8c\xdc\xa2\x75\x24\x9c\x6f\x2b\x65\x4c\x1a\x6d\xc3\x5c\x6f\xc9\xf8\x00" +
		"\x4b\xb1\x43\x08\x7f\x63\x88\x7f\xaf\xdb\xcd\x3f\xe3\x33\xbb\xad\x85\xc4\x60\xbf\x5d\xdd\x5c\xcf\xa7\x77\xde\x3e" +
		"\xd7\xfb\xa9\xd1\x1b\x55\x4e\x2a\x25\x6c\x7b\x7e\xe4\x47\xc4\xe7\x7a\xbf\x76\x86\x30\xe4\xdb\x0b\x82\x9f\x4d\x59" +
		"\x22\xc1\x18\x3e\x55\xe1\x6b\xb1\xab\xab\xd7\x37\xc6\xdc\xa1\x46\x38\x6e\x81\x75\xd4\x48\xe7\x2d\x9b\x46\x4b\x48" +
		"\xaa\x13\x63\xea\xa3\x24\xf2\x01\x46\x41\x01\x7e\xbd\xbe\x59\xa6\xf0\xca\xa2\xca\x94\xfc\x96\x94\x76\x9b\x24\xfe" +
		"\x68\xff\xd0\x71\x06\xf2\x81\xff\x82\xd6\x8a\x12\x93\x34\x65\x7d\xb8\xef\x70\x63\x08\x17\x5a\xb9\xc4\x3a\xe1\x55" +
		"\x80\xd1\xc9\x74\xf8\xba\xdd\xcc\x00\xfb\xce\x60\xe4\x79\x19\xfa\x49\x21\xd0\xe1\x93\x76\x01\xf8\x94\x50\x38\x5c" +
		"\x74\x52\xc0\x18\x7e\xb5\xc3\xea\xbd\xd7\xd4\x8b\xda\xba\x84\x4f\xc6\x22\x3f\x9c\xc0\xed\xa4\x28\x28\x83\xad\xb0" +
		"\xab\x7e\x05\xe3\x63\x1d\xfc\x07\x74\x6b\x47\x4a\x97\x49\xbc\x9a\xcf\x16\xeb\xbf\x26\xb3\xd9\x2a\x4e\x59\xa4\x36" +
		"\xf0\xe1\xec\xd4\x2b\x8b\x22\x42\xd7\x90\x86\x96\x65\xbe\xc4\xe7\x24\x16\x45\x41\x68\x2d\x6c\x4c\x97\x10\x94\x05" +
		"\xc2\xa7\x46\x11\x16\xf0\xf1\x29\x3e\xe9\x9a\xff\x84\x87\xef\x0d\x9d\xa7\x4a\x59\xf4\xc6\xde\x77\x74\x47\x42\xdb" +
		"\x70\x4f\xc7\x70\x3a\xc9\x50\xce\x60\xbc\x57\x6e\x7b\x53\x07\xea\x93\x90\x9b\x77\x2b\x5f\xeb\x12\xdd\xb3\xa1\xc7" +
		"\x2b\x88\x9d\xac\xe3\x8c\x45\x91\x6f\xe3\xca\xf3\x78\x1c\x0c\x8b\xde\x52\xc6\x86\xbe\x54\x35\x68\x3a\xd9\x38\xa4" +
		"\xff\x45\xd2\x7f\x0c\xdf\x4b\x95\x48\xf7\x02\xdd\x3b\xc4\xa7\xed\x6f\xd6\xc1\x09\xed\x45\xe3\x2d\xe4\x29\x24\xdd" +
		"\x3a\x1c\xcc\xda\xf8\x01\xd4\x2e\xfe\xa7\xf6\x72\xf3\x6b\x6b\x74\xf0\x79\x7d\xcb\xde\x27\xed\x11\xfa\xef\x79\x2f" +
		"\xb5\x98\x8c\x86\xb7\x82\xf7\x91\x4f\x0b\xf3\x14\xaa\x23\xc2\x47\xe7\x25\x3e\x0f\x95\x78\x01\xf2\xbc\x33\xfa\x64" +
		"\xa0\xb4\x33\x30\x5b\x04\x08\xdb\xed\x39\x11\x5c\x1d\x03\xf0\x49\x51\xfc\x26\xaa\x06\x93\xa1\xb6\x0c\xce\x9f\x8d" +
		"\xf4\xdb\x93\xa3\x1f\xc6\x7e\x0e\x67\x08\xab\x2a\xeb\x39\xbe\x27\x51\xdf\xe8\xea\x90\x0c\x07\x3a\x26\xf3\x1c\x26" +
		"\x45\x01\x3b\x43\x08\xb3\x05\x28\x87\xbb\x16\xf4\x02\x6b\xd4\x05\x6a\x79\xe8\x92\x78\xe8\x8e\x42\xab\x61\x14\x67" +
		"\x44\x15\xc5\x44\xf6\xb0\x96\xca\x3a\x3a\xc0\xa8\x7b\xb4\xf9\xbd\xa1\x47\xa4\x3b\xdc\xd5\x95\x70\xb8\xea\xec\x9d" +
		"\xba\xed\x82\xb7\xbb\x48\xc9\x8f\x58\x55\xe6\xde\x50\x55\xac\xf0\xa9\x41\xeb\xfc\x53\xf4\x77\x00\x00\x00\xff\xff" +
		"\xe7\x92\xc0\x6b\xe9\x06\x00\x00")

func gzipBindataTemplatesProjectServiceIndexgo() (*gzipAsset, error) {
	bytes := _gzipBindataTemplatesProjectServiceIndexgo
	info := gzipBindataFileInfo{
		name:        "templates/project/service/index.go",
		size:        1769,
		md5checksum: "",
		mode:        os.FileMode(436),
		modTime:     time.Unix(1609057641, 0),
	}

	a := &gzipAsset{bytes: bytes, info: info}

	return a, nil
}

// GzipAsset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func GzipAsset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _gzipbindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("GzipAsset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

// MustGzipAsset is like GzipAsset but panics when GzipAsset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
func MustGzipAsset(name string) []byte {
	a, err := GzipAsset(name)
	if err != nil {
		panic("asset: GzipAsset(" + name + "): " + err.Error())
	}

	return a
}

// GzipAssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
func GzipAssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _gzipbindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("GzipAssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

// GzipAssetNames returns the names of the assets.
// nolint: deadcode
func GzipAssetNames() []string {
	names := make([]string, 0, len(_gzipbindata))
	for name := range _gzipbindata {
		names = append(names, name)
	}
	return names
}

//
// _gzipbindata is a table, holding each asset generator, mapped to its name.
//
var _gzipbindata = map[string]func() (*gzipAsset, error){
	"templates/project/.env.dev":                        gzipBindataTemplatesProjectEnvdev,
	"templates/project/.env.prod":                       gzipBindataTemplatesProjectEnvprod,
	"templates/project/.env.qa":                         gzipBindataTemplatesProjectEnvqa,
	"templates/project/Makefile":                        gzipBindataTemplatesProjectMakefile,
	"templates/project/components/dropdown/blocks.html": gzipBindataTemplatesProjectComponentsDropdownBlockshtml,
	"templates/project/components/dropdown/index.go":    gzipBindataTemplatesProjectComponentsDropdownIndexgo,
	"templates/project/doc.go":                          gzipBindataTemplatesProjectDocgo,
	"templates/project/docker-compose.yml":              gzipBindataTemplatesProjectDockercomposeyml,
	"templates/project/go.mod.template":                 gzipBindataTemplatesProjectGomodtemplate,
	"templates/project/main.go":                         gzipBindataTemplatesProjectMaingo,
	"templates/project/pages/hello/index.go":            gzipBindataTemplatesProjectPagesHelloIndexgo,
	"templates/project/pages/index.go":                  gzipBindataTemplatesProjectPagesIndexgo,
	"templates/project/pages/not_found/index.go":        gzipBindataTemplatesProjectPagesNotfoundIndexgo,
	"templates/project/pages/theme.go":                  gzipBindataTemplatesProjectPagesThemego,
	"templates/project/service/hello.go":                gzipBindataTemplatesProjectServiceHellogo,
	"templates/project/service/index.go":                gzipBindataTemplatesProjectServiceIndexgo,
}

// GzipAssetDir returns the file names below a certain
// directory embedded in the file by bindata.
// For example if you run bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then GzipAssetDir("data") would return []string{"foo.txt", "img"}
// GzipAssetDir("data/img") would return []string{"a.png", "b.png"}
// GzipAssetDir("foo.txt") and GzipAssetDir("notexist") would return an error
// GzipAssetDir("") will return []string{"data"}.
func GzipAssetDir(name string) ([]string, error) {
	node := _gzipbintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op:   "open",
					Path: name,
					Err:  os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op:   "open",
			Path: name,
			Err:  os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type gzipBintree struct {
	Func     func() (*gzipAsset, error)
	Children map[string]*gzipBintree
}

var _gzipbintree = &gzipBintree{Func: nil, Children: map[string]*gzipBintree{
	"templates": {Func: nil, Children: map[string]*gzipBintree{
		"project": {Func: nil, Children: map[string]*gzipBintree{
			".env.dev":  {Func: gzipBindataTemplatesProjectEnvdev, Children: map[string]*gzipBintree{}},
			".env.prod": {Func: gzipBindataTemplatesProjectEnvprod, Children: map[string]*gzipBintree{}},
			".env.qa":   {Func: gzipBindataTemplatesProjectEnvqa, Children: map[string]*gzipBintree{}},
			"Makefile":  {Func: gzipBindataTemplatesProjectMakefile, Children: map[string]*gzipBintree{}},
			"components": {Func: nil, Children: map[string]*gzipBintree{
				"dropdown": {Func: nil, Children: map[string]*gzipBintree{
					"blocks.html": {Func: gzipBindataTemplatesProjectComponentsDropdownBlockshtml, Children: map[string]*gzipBintree{}},
					"index.go":    {Func: gzipBindataTemplatesProjectComponentsDropdownIndexgo, Children: map[string]*gzipBintree{}},
				}},
			}},
			"doc.go":             {Func: gzipBindataTemplatesProjectDocgo, Children: map[string]*gzipBintree{}},
			"docker-compose.yml": {Func: gzipBindataTemplatesProjectDockercomposeyml, Children: map[string]*gzipBintree{}},
			"go.mod.template":    {Func: gzipBindataTemplatesProjectGomodtemplate, Children: map[string]*gzipBintree{}},
			"main.go":            {Func: gzipBindataTemplatesProjectMaingo, Children: map[string]*gzipBintree{}},
			"pages": {Func: nil, Children: map[string]*gzipBintree{
				"hello": {Func: nil, Children: map[string]*gzipBintree{
					"index.go": {Func: gzipBindataTemplatesProjectPagesHelloIndexgo, Children: map[string]*gzipBintree{}},
				}},
				"index.go": {Func: gzipBindataTemplatesProjectPagesIndexgo, Children: map[string]*gzipBintree{}},
				"not_found": {Func: nil, Children: map[string]*gzipBintree{
					"index.go": {Func: gzipBindataTemplatesProjectPagesNotfoundIndexgo, Children: map[string]*gzipBintree{}},
				}},
				"theme.go": {Func: gzipBindataTemplatesProjectPagesThemego, Children: map[string]*gzipBintree{}},
			}},
			"service": {Func: nil, Children: map[string]*gzipBintree{
				"hello.go": {Func: gzipBindataTemplatesProjectServiceHellogo, Children: map[string]*gzipBintree{}},
				"index.go": {Func: gzipBindataTemplatesProjectServiceIndexgo, Children: map[string]*gzipBintree{}},
			}},
		}},
	}},
}}
